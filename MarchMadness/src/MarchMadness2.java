import java.util.ArrayList;
import java.util.Arrays;


public class MarchMadness2 {
	public static void main(String[] args) {
		//but this time this is out of order so we have to order it.
		double[] data = 
			 {1,0.99027066,0.85918351,0.67828186,0.45023946,0.31944170,0.19075352,
				1,0.98853534,0.90950657,0.60817503,0.43570812,0.25828430,0.14930867,
				1,0.98257765,0.80380925,0.51873446,0.30337328,0.17204813,0.09809013,
				1,0.94887050,0.77758053,0.59666399,0.34163827,0.17418695,0.09037858,
				1,0.95858319,0.82380137,0.53575350,0.32090140,0.14350639,0.06830337,
				1,0.96293972,0.76701243,0.47647829,0.22410118,0.13313074,0.06419710,
				1,0.92580408,0.61231312,0.25285155,0.16008586,0.08557958,0.04498778,
				1,0.84810393,0.63003359,0.39850910,0.16139746,0.07423722,0.03406983,
				1,0.83800472,0.51515337,0.24244080,0.12776408,0.05706603,0.02636664,
				1,0.97687859,0.72068889,0.43888875,0.22625749,0.07247699,0.02577728,
				1,0.88152474,0.54752564,0.24013002,0.12298022,0.05177450,0.02338144,
				1,0.94127341,0.59532198,0.29417482,0.09844210,0.04206094,0.01806991,
				1,0.51431690,0.32042143,0.14781034,0.06042389,0.03638800,0.01782473,
				1,0.84597916,0.54298653,0.26238540,0.12118646,0.04359085,0.01716166,
				1,0.79464229,0.42966905,0.13406892,0.06284261,0.03181260,0.01283005,
				1,0.87683343,0.35641128,0.10909667,0.05746705,0.02553770,0.01136375,
				1,0.85764429,0.36193270,0.14119841,0.04926496,0.02538718,0.01043939,
				1,0.84070229,0.40323890,0.14791707,0.06396107,0.02506572,0.01033214,
				1,0.61274924,0.27071246,0.13094193,0.06053230,0.02389724,0.01020441,
				1,0.70010916,0.32852083,0.12739812,0.05904588,0.02146167,0.00852686,
				1,0.87009917,0.49556720,0.15401413,0.05283135,0.02025549,0.00819130,
				1,0.24479242,0.14752607,0.06719520,0.02713811,0.01568456,0.00732902,
				1,0.85542774,0.47614677,0.10863376,0.03997343,0.01902957,0.00718235,
				1,0.72194021,0.18532737,0.09020343,0.03229532,0.01591368,0.00623311,
				1,0.24089068,0.15016678,0.06372220,0.02406315,0.01207738,0.00482564,
				1,0.60181899,0.30534000,0.09334611,0.03153286,0.01163139,0.00454772,
				1,0.62883547,0.27120281,0.10943365,0.02883334,0.01056931,0.00396060,
				1,0.63962006,0.10092979,0.05383272,0.02137182,0.00957395,0.00338733,
				1,0.65620848,0.22387739,0.10096272,0.02638046,0.00932462,0.00338264,
				1,0.60090565,0.18119402,0.08338647,0.03175743,0.00928246,0.00304539,
				1,0.66939449,0.14723674,0.06326094,0.02493129,0.00840941,0.00304066,
				1,0.39818101,0.17140580,0.05308266,0.01814918,0.00628231,0.00232358,
				1,0.72986288,0.13684525,0.05533961,0.02078796,0.00537453,0.00158145,
				1,0.52355784,0.11223684,0.05286871,0.01561964,0.00447173,0.00139994,
				1,0.47644216,0.09678832,0.04406258,0.01251033,0.00358386,0.00112262,
				1,0.37116453,0.12546356,0.04765302,0.01171717,0.00352889,0.00110960,
				1,0.39909435,0.09598866,0.03716792,0.01184057,0.00281474,0.00076841,
				1,0.62200871,0.06163550,0.02016366,0.00827175,0.00233723,0.00069406,
				1,0.29989084,0.09564089,0.02523050,0.00847055,0.00186911,0.00047727,
				1,0.15189607,0.06274396,0.02012179,0.00356986,0.00125912,0.00045589,
				1,0.36037994,0.03899954,0.01506041,0.00414329,0.00154127,0.00044955,
				1,0.38725076,0.13930259,0.03697456,0.00981211,0.00193447,0.00044616,
				1,0.33060551,0.04701794,0.01380148,0.00381940,0.00119451,0.00040421,
				1,0.15495831,0.03650961,0.01209639,0.00222409,0.00071360,0.00023744,
				1,0.18883321,0.04683546,0.01622792,0.00313486,0.00082611,0.00023042,
				1,0.37799129,0.02681753,0.00599575,0.00179680,0.00052333,0.00015969,
				1,0.16199528,0.04952787,0.00870720,0.00203931,0.00051860,0.00014619,
				1,0.20535771,0.06034051,0.00740917,0.00161115,0.00046157,0.00010337,
				1,0.27805979,0.04054921,0.00956073,0.00166607,0.00044764,0.00009402,
				1,0.15402084,0.04699842,0.01007384,0.00219271,0.00036944,0.00007384,
				1,0.27013712,0.02724936,0.00828996,0.00238039,0.00034713,0.00006074,
				1,0.15929771,0.03207986,0.00502908,0.00106543,0.00021005,0.00004714,
				1,0.11847526,0.02831264,0.00459979,0.00100778,0.00014237,0.00002419,
				1,0.07419592,0.01508335,0.00195189,0.00054301,0.00009697,0.00001899,
				1,0.12316657,0.01619226,0.00161684,0.00036130,0.00007099,0.00001517,
				1,0.14457226,0.03384366,0.00262018,0.00037417,0.00008126,0.00001381,
				1,0.12990083,0.02768700,0.00309367,0.00039608,0.00006492,0.00001232,
				1,0.14235571,0.01995303,0.00274466,0.00036012,0.00007377,0.00001184,
				1,0.04141681,0.01210402,0.00325849,0.00083390,0.00008925,0.00001170,
				1,0.05112950,0.01339431,0.00286816,0.00036216,0.00005303,0.00000907,
				1,0.03706028,0.00711099,0.00108673,0.00012472,0.00002260,0.00000321,
				1,0.05872659,0.00801166,0.00082059,0.00005044,0.00000597,0.00000080,
				1,0.00903984,0.00175648,0.00013218,0.00001489,0.00000157,0.00000019,
				1,0.01317002,0.00130713,0.00012083,0.00000921,0.00000062,0.00000005,
				1,0.00972934,0.00088715,0.00009298,0.00000656,0.00000060,0.00000004,
				1,0.01742235,0.00193607,0.00010899,0.00000624,0.00000035,0.00000002,
				1,0.00995139,0.00082130,0.00006031,0.00000366,0.00000017,0.00000001,
				1,0.00242482,0.00028391,0.00001643,0.00000144,0.00000008,0.00000000};
		
		String[] teamNames = {
				"Kansas",
				"North Carolina",
				"Virginia",
				"Michigan State",
				"Oklahoma",
				"Villanova",
				"Kentucky",
				"West Virginia",
				"Purdue",
				"Oregon",
				"Texas A&M",
				"Xavier",
				"Arizona",
				"Duke",
				"Maryland",
				"Indiana",
				"Miami (FL)",
				"Iowa State",
				"Baylor",
				"Texas",
				"Utah",
				"Wichita State",
				"California",
				"Iowa",
				"Vanderbilt",
				"Gonzaga",
				"Wisconsin",
				"Connecticut",
				"Notre Dame",
				"Cincinnati",
				"Butler",
				"Seton Hall",
				"Virginia Commonwealth",
				"Dayton",
				"Syracuse",
				"Pittsburgh",
				"Saint Joseph's",
				"Providence",
				"Northern Iowa",
				"Stephen F. Austin",
				"Colorado",
				"Yale",
				"Texas Tech",
				"Tulsa",
				"Michigan",
				"Southern California",
				"Arkansas-Little Rock",
				"South Dakota State",
				"Temple",
				"North Carolina-Wilmington",
				"Oregon State",
				"Iona",
				"Green Bay",
				"Stony Brook",
				"Chattanooga",
				"Hawaii",
				"Fresno State",
				"Buffalo",
				"Cal State Bakersfield",
				"Middle Tennessee",
				"North Carolina-Asheville",
				"Weber State",
				"Florida Gulf Coast",
				"Southern",
				"Austin Peay",
				"Hampton",
				"Holy Cross",
				"Fairleigh Dickinson"};
		
		String pi = "3.14159265358979323846264338327950288419716939937510"
				+"58209749445923078164062862089986280348253421170679"
				+"82148086513282306647093844609550582231725359408128"
				+"48111745028410270193852110555964462294895493038196"
				+"44288109756659334461284756482337867831652712019091"
				+"45648566923460348610454326648213393607260249141273"
				+"72458700660631558817488152092096282925409171536436"
				+"78925903600113305305488204665213841469519415116094"
				+"33057270365759591953092186117381932611793105118548"
				+"07446237996274956735188575272489122793818301194912"
				+"98336733624406566430860213949463952247371907021798"
				+"60943702770539217176293176752384674818467669405132"
				+"00056812714526356082778577134275778960917363717872"
				+"14684409012249534301465495853710507922796892589235"
				+"42019956112129021960864034418159813629774771309960"
				+"51870721134999999837297804995105973173281609631859"
				+"50244594553469083026425223082533446850352619311881"
				+"71010003137838752886587533208381420617177669147303"
				+"59825349042875546873115956286388235378759375195778"
				+"18577805321712268066130019278766111959092164201989";
	
		String e = "2.7182818284590452353602874713526624977572470936999"
				+ "5957496696762772407663035354759457138217852516642742"
				+ "7466391932003059921817413596629043572900334295260595"
				+ "6307381323286279434907632338298807531952510190115738"
				+ "3418793070215408914993488416750924476146066808226480"
				+ "0168477411853742345442437107539077744992069551702761"
				+ "8386062613313845830007520449338265602976067371132007"
				+ "0932870912744374704723069697720931014169283681902551"
				+ "5108657463772111252389784425056953696770785449969967"
				+ "9468644549059879316368892300987931277361782154249992"
				+ "2957635148220826989519366803318252886939849646510582"
				+ "0939239829488793320362509443117301238197068416140397"
				+ "0198376793206832823764648042953118023287825098194558"
				+ "1530175671736133206981125099618188159304169035159888"
				+ "8519345807273866738589422879228499892086805825749279"
				+ "6104841984443634632449684875602336248270419786232090"
				+ "0216099023530436994184914631409343173814364054625315"
				+ "2096183690888707016768396424378140592714563549061303"
				+ "1072085103837505101157477041718986106873969655212671"
				+ "546889570350354";
		
		String sqrt2 = "1.4142135623730950488016887242096980785696718753"
				+ "76948073176679737990732478462107038850387534327641572"
				+ "73501384623091229702492483605585073721264412149709993"
				+ "58314132226659275055927557999505011527820605714701095"
				+ "59971605970274534596862014728517418640889198609552329"
				+ "23048430871432145083976260362799525140798968725339654"
				+ "63318088296406206152583523950547457502877599617298355"
				+ "75220337531857011354374603408498847160386899970699004"
				+ "81503054402779031645424782306849293691862158057846311"
				+ "15966687130130156185689872372352885092648612494977154"
				+ "21833420428568606014682472077143585487415565706967765"
				+ "37202264854470158588016207584749226572260020855844665"
				+ "21458398893944370926591800311388246468157082630100594"
				+ "85870400318648034219489727829064104507263688131373985"
				+ "52561173220402450912277002269411275736272804957381089"
				+ "67504018369868368450725799364729060762996941380475654"
				+ "82372899718032680247442062926912485905218100445984215"
				+ "05911202494413417285314781058036033710773091828693147"
				+ "10171111683916581726889419758716582152128229518488472"
				+ "08969";
		
		String phi = "1.618033988749894848204586834365638117720309179805"
				+ "76286213544862270526046281890244970720720418939113748"
				+ "47540880753868917521266338622235369317931800607667263"
				+ "54433389086595939582905638322661319928290267880675208"
				+ "76689250171169620703222104321626954862629631361443814"
				+ "97587012203408058879544547492461856953648644492410443"
				+ "20771344947049565846788509874339442212544877066478091"
				+ "58846074998871240076521705751797883416625624940758906"
				+ "97040002812104276217711177780531531714101170466659914"
				+ "66979873176135600670874807101317952368942752194843530"
				+ "56783002287856997829778347845878228911097625003026961"
				+ "56170025046433824377648610283831268330372429267526311"
				+ "65339247316711121158818638513316203840052221657912866"
				+ "75294654906811317159934323597349498509040947621322298"
				+ "10172610705961164562990981629055520852479035240602017"
				+ "27997471753427775927786256194320827505131218156285512"
				+ "22480939471234145170223735805772786160086883829523045"
				+ "92647878017889921990270776903895321968198615143780314"
				+ "997411069260886742962267575605231727775203536139362";
	
		IrratRandom iRand = new IrratRandom("pi", pi);
		
		ArrayList<Team> outOfOrderTeams = new ArrayList<Team>(64);
		
		//this is the actual order
		String[] actualTeamNames = {"Kansas", "Austin Peay", "Colorado", "Connecticut",
				"Maryland", "South Dakota State", "California", "Hawaii", "Arizona",
				"Wichita State", "Miami (FL)", "Buffalo", "Iowa", "Temple", "Villanova",
				"North Carolina-Asheville", "Oregon", "Holy Cross", "Saint Joseph's", "Cincinnati", "Baylor",
				"Yale", "Duke", "North Carolina-Wilmington", "Texas", "Northern Iowa", "Texas A&M",
				"Green Bay", "Oregon State", "Virginia Commonwealth", "Oklahoma", "Cal State Bakersfield", "North Carolina", "Florida Gulf Coast",
				"Southern California", "Providence", "Indiana", "Chattanooga", "Kentucky", "Stony Brook",
				"Notre Dame", "Michigan", "West Virginia", "Stephen F. Austin", "Wisconsin",
				"Pittsburgh", "Xavier", "Weber State", "Virginia", "Hampton",
				"Texas Tech", "Butler", "Purdue", "Arkansas-Little Rock", "Iowa State", "Iona",
				"Seton Hall", "Gonzaga", "Utah", "Fresno State", "Dayton", "Syracuse",
				"Michigan State", "Middle Tennessee"};
		
		
		
		for(int i = 0; i < teamNames.length; i++)
			outOfOrderTeams.add(new Team(teamNames[i], Arrays.copyOfRange(data,7*i,7*i + 7)));
		
		ArrayList<Team> teams = new ArrayList<Team>();
		
		for(String s: actualTeamNames) {
			boolean hasFound = false;
			for(Team t: outOfOrderTeams) {
				if(t.name.equals(s)) {
					teams.add(t);
					hasFound = true;
				}
			}
			if(!hasFound) {
				System.out.println(s);
			}
		}
		
		System.out.println(teams.toString());
		
		iRand.setDigit(8);
	
		int round = 1;
		
		while(teams.size() > 1) {
			ArrayList<Team> nextRound = new ArrayList<Team>(teams.size() / 2);
			System.out.println("Round " + round + "\n");
			
			for(int i = 0; i < teams.size(); i+=2) {
				
				System.out.println(teams.get(i).name + " vs " + teams.get(i+1).name);
				
				double t1percent = (teams.get(i).data[round] / teams.get(i).data[round - 1]);
				double t2percent = (teams.get(i + 1).data[round] / teams.get(i + 1).data[round - 1]);
				System.out.println(t1percent + ", " + t2percent);
				
				t1percent /= t1percent + t2percent;
				t2percent /=  t1percent + t2percent;
				System.out.println(t1percent + ", " + t2percent);
				
				double val = (double)iRand.nextInt() / 100;
				System.out.println(iRand.name + " value: " + val);
				System.out.print("Predicted winner: ");
				
				if(val < t1percent) {
					System.out.println(teams.get(i).name);
					nextRound.add(teams.get(i));
				} else {
					System.out.println(teams.get(i+1).name);
					nextRound.add(teams.get(i+1));
				}
				
				System.out.println();
			}
			teams = nextRound;
			round++;
		}
		
	}
}
